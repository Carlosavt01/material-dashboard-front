{"ast":null,"code":"import _classCallCheck from \"/home/shlep/Desktop/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/shlep/Desktop/Frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MedicamentoService } from 'app/programming/services/medicamento.service';\nimport { Cliente } from 'app/programming/dto/Cliente.dto';\nimport { ClienteMedicamentoService } from 'app/programming/services/cliente-medicamento.service';\nimport { Funciones } from 'app/programming/programacion/Funciones';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/programming/services/medicamento.service\";\nimport * as i2 from \"app/programming/services/cliente-medicamento.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction UserProfileComponent_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 24);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_ng_container_28_Template_a_click_1_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r5);\n      var medicamento_r2 = restoredCtx.$implicit;\n      var ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.addMedicamentoToDb(medicamento_r2.id_medicamento);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var medicamento_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicamento_r2.nombre_medicamento);\n  }\n}\n\nfunction UserProfileComponent_tr_45_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 25)(8, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_tr_45_Template_button_click_8_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r9);\n      var medicamento_seleccionado_r6 = restoredCtx.$implicit;\n      var ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.deleteMedicamentoFromTable(medicamento_seleccionado_r6.id_medicamento);\n    });\n    i0.ɵɵtext(9, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var medicamento_seleccionado_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", medicamento_seleccionado_r6.id_medicamento, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", medicamento_seleccionado_r6.nombre_medicamento, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", medicamento_seleccionado_r6.contenido_medicamento, \" \");\n  }\n}\n\nexport var UserProfileComponent = /*#__PURE__*/(function () {\n  var UserProfileComponent = /*#__PURE__*/function () {\n    function UserProfileComponent(medicamentoService, clienteMedicamentoService, formBuilder, router) {\n      _classCallCheck(this, UserProfileComponent);\n\n      this.medicamentoService = medicamentoService;\n      this.clienteMedicamentoService = clienteMedicamentoService;\n      this.formBuilder = formBuilder;\n      this.router = router; // medicamentos que llenan el combobox (vienen del API)\n\n      this.medicamentos = [];\n      this.medicamentos_seleccionados = [];\n      this.cliente_iniciado = new Cliente();\n    }\n\n    _createClass(UserProfileComponent, [{\n      key: \"form\",\n      get: function get() {\n        return this.cliente_medicamentos_form.controls;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var funciones = new Funciones();\n        this.cliente_iniciado = JSON.parse(localStorage.getItem('cliente'));\n        this.cliente_medicamentos_form = this.formBuilder.group({\n          id_cliente_medicamento: [null],\n          id_cliente: [this.cliente_iniciado.id_cliente, [Validators.required]],\n          id_medicamento: ['', Validators.required],\n          completado_medicamento: [false, [Validators.required]],\n          hora_medicacion: ['', [Validators.required]],\n          fecha_medicacion: ['', [Validators.required]]\n        });\n        this.listAllMedicamentos();\n      }\n    }, {\n      key: \"addMedicamentoToDb\",\n      value: function addMedicamentoToDb(id_medicamento) {\n        var _this = this;\n\n        console.log(\"Agregando el medicamento: \" + id_medicamento);\n        var medicamento_seleccionado = this.cliente_medicamentos_form.value;\n        medicamento_seleccionado.id_medicamento = id_medicamento;\n        this.clienteMedicamentoService.createOrUpdate(medicamento_seleccionado).subscribe(function (resp) {\n          console.log(resp.body);\n\n          _this.addMedicamentoToTable(id_medicamento);\n        }, function (error) {\n          console.log(error);\n          Swal.fire(\"Error en API\", \"Ocurrio un error interno al registrar el medicamento\", \"error\");\n        });\n        console.log(JSON.stringify(this.cliente_medicamentos_form.value));\n      }\n    }, {\n      key: \"addMedicamentoToTable\",\n      value: function addMedicamentoToTable(id_medicamento) {\n        var _this2 = this;\n\n        this.medicamentoService.getById(id_medicamento).subscribe(function (resp) {\n          _this2.medicamentos_seleccionados.push(resp.body);\n        }, function (error) {\n          console.log(\"Error\");\n          Swal.fire(\"Error\", \"Error de API\", \"error\");\n        });\n      }\n    }, {\n      key: \"findIndexMedicamentoById\",\n      value: function findIndexMedicamentoById(id_medicamento) {\n        return this.medicamentos_seleccionados.findIndex(function (medSeleccionado) {\n          return medSeleccionado.id_medicamento === id_medicamento;\n        });\n      }\n    }, {\n      key: \"deleteMedicamentoFromTable\",\n      value: function deleteMedicamentoFromTable(id_medicamento) {\n        this.medicamentos_seleccionados.splice(this.findIndexMedicamentoById(id_medicamento), 1);\n      }\n    }, {\n      key: \"listAllMedicamentos\",\n      value: function listAllMedicamentos() {\n        var _this3 = this;\n\n        this.medicamentoService.getAll().subscribe(function (resp) {\n          _this3.medicamentos = resp.body;\n        }, function (error) {});\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit() {\n        this.router.navigate(['/table-list']);\n      }\n    }]);\n\n    return UserProfileComponent;\n  }();\n\n  UserProfileComponent.ɵfac = function UserProfileComponent_Factory(t) {\n    return new (t || UserProfileComponent)(i0.ɵɵdirectiveInject(i1.MedicamentoService), i0.ɵɵdirectiveInject(i2.ClienteMedicamentoService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  UserProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserProfileComponent,\n    selectors: [[\"app-user-profile\"]],\n    decls: 48,\n    vars: 3,\n    consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-3\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"margin-bottom\", \"3rem\", \"align-items\", \"center\"], [\"for\", \"fecha\"], [\"type\", \"date\", \"id\", \"fecha\", \"formControlName\", \"fecha_medicacion\", \"name\", \"fecha_medicacion\", 1, \"form-control\"], [\"for\", \"hora\"], [\"type\", \"time\", \"id\", \"hora\", \"formControlName\", \"hora_medicacion\", \"name\", \"hora_medicacion\", 1, \"form-control\"], [1, \"dropdown\"], [\"type\", \"button\", \"id\", \"dropdownMenuButton\", \"data-toggle\", \"dropdown\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", 1, \"btn\", \"btn-secondary\", \"dropdown-toggle\"], [\"aria-labelledby\", \"dropdownMenuButton\", 1, \"dropdown-menu\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card-header\", \"card-header-danger\", \"mt-3\"], [1, \"table-responsive\"], [1, \"table\"], [1, \"text-primary\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-success\", \"pull-right\"], [1, \"dropdown-item\", 3, \"click\"], [1, \"flex-2-columns\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function UserProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"Registro de medicamentos\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\", 9)(12, \"div\");\n        i0.ɵɵtext(13, \" Selecciona el medicamento \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 3)(16, \"div\")(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Selecciona la fecha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\")(21, \"label\", 13);\n        i0.ɵɵtext(22, \"Selecciona la hora\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 15)(25, \"button\", 16);\n        i0.ɵɵtext(26, \" Selecciona el medicamento \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 17);\n        i0.ɵɵtemplate(28, UserProfileComponent_ng_container_28_Template, 3, 1, \"ng-container\", 18);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(29, \"div\", 19)(30, \"h4\", 6);\n        i0.ɵɵtext(31, \"Medicamentos seleccionados\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 7)(33, \"div\", 20)(34, \"table\", 21)(35, \"thead\", 22)(36, \"th\");\n        i0.ɵɵtext(37, \" No. medicamento \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"th\");\n        i0.ɵɵtext(39, \" Nombre Medicamento \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"th\");\n        i0.ɵɵtext(41, \" Contenido \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"th\");\n        i0.ɵɵtext(43, \" Accion \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"tbody\");\n        i0.ɵɵtemplate(45, UserProfileComponent_tr_45_Template, 10, 3, \"tr\", 18);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"button\", 23);\n        i0.ɵɵtext(47, \"Agregar registros\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.cliente_medicamentos_form);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.medicamentos);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.medicamentos_seleccionados);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i5.NgForOf, i6.MatButton],\n    styles: [\".flex-2-columns[_ngcontent-%COMP%]{display:flex;gap:1rem}\"]\n  });\n  return UserProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}