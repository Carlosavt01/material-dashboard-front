{"ast":null,"code":"import _classCallCheck from \"/home/shlep/Desktop/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/shlep/Desktop/Frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var ClienteService = /*#__PURE__*/(function () {\n  var ClienteService = /*#__PURE__*/function () {\n    function ClienteService(httpClient) {\n      _classCallCheck(this, ClienteService);\n\n      this.httpClient = httpClient;\n      this.baseUrl = environment.baseUrl;\n      this.getAllUrl = \"\".concat(this.baseUrl, \"/api/proyecto/clientes/getAll\");\n      this.getByIdUrl = \"\".concat(this.baseUrl, \"/api/proyecto/clientes/getById\"); // aqui falta el id\n\n      this.createOrUpdateUrl = \"\".concat(this.baseUrl, \"/api/proyecto/clientes/createOrUpdate\");\n      this.deleteByIdUrl = \"\".concat(this.baseUrl, \"/api/proyecto/clientes/deleteById\"); // aqui falta el id\n    }\n\n    _createClass(ClienteService, [{\n      key: \"getAll\",\n      value: function getAll() {\n        return this.httpClient.get(\"\".concat(this.getAllUrl));\n      }\n    }, {\n      key: \"getById\",\n      value: function getById(id) {\n        return this.httpClient.get(\"\".concat(this.getByIdUrl, \"/\").concat(id));\n      }\n    }, {\n      key: \"createOrUpdate\",\n      value: function createOrUpdate(entity) {\n        return this.httpClient.post(\"\".concat(this.createOrUpdateUrl), entity);\n      }\n    }, {\n      key: \"deleteById\",\n      value: function deleteById(id) {\n        return this.httpClient.delete(\"\".concat(this.deleteByIdUrl, \"/\").concat(id));\n      }\n    }]);\n\n    return ClienteService;\n  }();\n\n  ClienteService.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ClienteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClienteService;\n})();","map":null,"metadata":{},"sourceType":"module"}